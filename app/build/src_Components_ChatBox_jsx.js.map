{"version":3,"file":"src_Components_ChatBox_jsx.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAiC;AACsB;AACC;AACK;AACpB;AACuB;AAEhE,MAAM;EAAEY;AAAS,CAAC,GAAGN,4CAAK;AAE1B,MAAMO,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAMC,QAAQ,GAAGZ,wDAAW,CAAC,CAAC;EAE9B,MAAMa,MAAM,GAAGd,wDAAW,CAAEe,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACC,QAAQ,CAAC;EAC9D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpB,+CAAQ,CAAC,QAAQ,CAAC;EAEpD,MAAMqB,OAAO,GAAGA,CAAA,KAAM;IACpBP,QAAQ,CAACX,oEAAW,CAAC,KAAK,CAAC,CAAC;EAC9B,CAAC;EACD,MAAMmB,QAAQ,GAAIC,CAAC,IAAK;IACtBH,YAAY,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,OACEC,oDAAA,CAAAC,2CAAA,QACED,oDAAA,CAACtB,4CAAMA;EACL;EAAA;IACAe,SAAS,EAAEA,SAAU;IACrBS,QAAQ,EAAE,KAAM;IAChBP,OAAO,EAAEA,OAAQ;IACjBQ,IAAI,EAAEd,MAAO;IACbe,GAAG,EAAEX,SAAU;IACfY,MAAM,EAAE;MACNC,MAAM,EAAE;QACNC,OAAO,EAAE,MAAM;QACfC,SAAS,EAAE,QAAQ;QACnBC,OAAO,EAAE,KAAK;QACdC,MAAM,EAAE;MACV,CAAC;MACDC,IAAI,EAAE;QACJF,OAAO,EAAE,MAAM;QACfG,UAAU,EAAE,MAAM;QAClBL,OAAO,EAAE,MAAM;QACfM,aAAa,EAAE;MACjB,CAAC;MACDC,OAAO,EAAE;QACPP,OAAO,EAAE,MAAM;QACfQ,cAAc,EAAE;MAClB,CAAC;MACDC,OAAO,EAAE;QACPT,OAAO,EAAE,MAAM;QACfC,SAAS,EAAE;MACb;IACF;IACA;IACA;IAAA;IACAS,MAAM,EAAE,GAAI;IACZC,SAAS,EAAC;EAAS,GAEnBlB,oDAAA,CAAClB,4CAAK;IAACqC,IAAI;IAACC,IAAI,EAAE,EAAG;IAACC,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAW;EAAE,GACpDtB,oDAAA,CAACnB,4CAAM;IAACuC,IAAI,EAAC,OAAO;IAACG,IAAI,EAAEvB,oDAAA,CAAChB,yDAAY,MAAE;EAAE,CAAE,CAAC,6CAE/C,EAAAgB,oDAAA,CAACf,yDAAa;IACZoC,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEE,KAAK,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAE,CAAE;IAClDC,OAAO,EAAE/B;EAAQ,CAClB,CACI,CAAC,EAERK,oDAAA,CAACrB,6CAAO,MAAE,CAAC,EACXqB,oDAAA;IAAGkB,SAAS,EAAC;EAAW,GAAC,gCAAiC,CAAC,EAC3DlB,oDAAA;IAAGkB,SAAS,EAAC;EAAY,GAAC,gFAGvB,CAAC,EACJlB,oDAAA;IAAGkB,SAAS,EAAC;EAAW,GAAC,uBAAwB,CAAC,EAClDlB,oDAAA;IAAGkB,SAAS,EAAC;EAAW,GAAC,uDAEtB,CAAC,EACJlB,oDAAA;IACE2B,GAAG,EAAE5C,6CAAK;IACV6C,GAAG,EAAC,MAAM;IACVP,KAAK,EAAE;MAAEb,SAAS,EAAE,KAAK;MAAEqB,YAAY,EAAE;IAAO;EAAE,CACnD,CAAC,EACF7B,oDAAA,CAACd,QAAQ;IAAC4C,IAAI,EAAE,CAAE;IAACC,WAAW,EAAC;EAAgB,CAAE,CAC3C,CACR,CAAC;AAEP,CAAC;AAED,iEAAe5C,OAAO","sources":["webpack://app/./src/Components/ChatBox.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setShowChat } from \"../store/reducer/mapSlice\";\r\nimport { Drawer, Divider, Input, Avatar, Space } from \"antd\";\r\nimport gate from \"../../images/gate.png\";\r\nimport { UserOutlined, CloseOutlined } from \"@ant-design/icons\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst ChatBox = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isOpen = useSelector((state) => state.mapState.showChat);\r\n  const [placement, setPlacement] = useState(\"bottom\");\r\n\r\n  const onClose = () => {\r\n    dispatch(setShowChat(false));\r\n  };\r\n  const onChange = (e) => {\r\n    setPlacement(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        // title={<Test onClose={onClose} />}\r\n        placement={placement}\r\n        closable={false}\r\n        onClose={onClose}\r\n        open={isOpen}\r\n        key={placement}\r\n        styles={{\r\n          header: {\r\n            display: \"flex\",\r\n            alignSelf: \"center\",\r\n            padding: \"0px\",\r\n            border: \"0px\"\r\n          },\r\n          body: {\r\n            padding: \"10px\",\r\n            paddingTop: \"30px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n          },\r\n          content: {\r\n            display: \"flex\",\r\n            justifyContent: \"center\"\r\n          },\r\n          wrapper: {\r\n            display: \"flex\",\r\n            alignSelf: \"center\"\r\n          }\r\n        }}\r\n        // rootStyle={{ top: \"30px\" }}\r\n        // closeIcon={<CloseOutlined />}\r\n        height={750}\r\n        className=\"chatbox\"\r\n      >\r\n        <Space wrap size={16} style={{ position: \"relative\" }}>\r\n          <Avatar size=\"large\" icon={<UserOutlined />} />\r\n          Erika - Operations - March 28, 2019 11:50\r\n          <CloseOutlined\r\n            style={{ position: \"absolute\", right: 0, top: 0 }}\r\n            onClick={onClose}\r\n          />\r\n        </Space>\r\n\r\n        <Divider />\r\n        <p className=\"chat left\">Morbi ullamcorper quis est et.</p>\r\n        <p className=\"chat right\">\r\n          Integer quis eros quis et, vestibulum lobortis tortor, eleifend\r\n          eleifend arcu.\r\n        </p>\r\n        <p className=\"chat left\">In a nulla fermentum.</p>\r\n        <p className=\"chat left\">\r\n          Pellentesque a lectus nulla, dapibus luctus arcu nec.\r\n        </p>\r\n        <img\r\n          src={gate}\r\n          alt=\"Gate\"\r\n          style={{ alignSelf: \"end\", marginBottom: \"30px\" }}\r\n        />\r\n        <TextArea rows={4} placeholder=\"Type a Message\" />\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"names":["useState","useSelector","useDispatch","setShowChat","Drawer","Divider","Input","Avatar","Space","gate","UserOutlined","CloseOutlined","TextArea","ChatBox","dispatch","isOpen","state","mapState","showChat","placement","setPlacement","onClose","onChange","e","target","value","createElement","Fragment","closable","open","key","styles","header","display","alignSelf","padding","border","body","paddingTop","flexDirection","content","justifyContent","wrapper","height","className","wrap","size","style","position","icon","right","top","onClick","src","alt","marginBottom","rows","placeholder"],"sourceRoot":""}